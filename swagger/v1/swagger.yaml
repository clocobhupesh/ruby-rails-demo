---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - Users
      security:
      - Bearer: []
      parameters:
      - name: page
        in: query
        required: false
        description: Page number for pagination
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Number of items per page
        example: 10
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: create user
      tags:
      - Users
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
                firstname:
                  type: string
                  example: firstname
                lastname:
                  type: string
                  example: lastname
                email:
                  type: string
                  example: email@gmail.com
              required:
              - username
              - password
              - lastname
              - lastname
              - email
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Users
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
    patch:
      summary: update user
      tags:
      - Users
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
                firstname:
                  type: string
                  example: firstname
                lastname:
                  type: string
                  example: lastname
                email:
                  type: string
                  example: email@gmail.com
              required:
              - username
              - passwordlastname
              - lastname
              - email
    put:
      summary: update user
      tags:
      - Users
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
                firstname:
                  type: string
                  example: firstname
                lastname:
                  type: string
                  example: lastname
                email:
                  type: string
                  example: email@gmail.com
              required:
              - username
              - passwordlastname
              - lastname
              - email
    delete:
      summary: delete user
      tags:
      - Users
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:8080
